# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000000
HISTFILESIZE=2000000


# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac


xset r rate 210 30

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
	PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '	
	# PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac




# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# some more ls aliases
alias ll='ls -alFh'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# added by Anaconda3 installer
export PATH="/home/johannes/anaconda3/bin:$PATH"

# added by Anaconda2 installer
export PATH="/home/johannes/anaconda2/bin:$PATH"

# added by Anaconda2 installer
export PATH="/home/johannes/anaconda2/bin:$PATH"

export PATH="/usr/games:$PATH"

export PATH=$PATH:/home/johannes/.local/bin/

# alias ytd="youtube-dl -i --audio-quality 0 --extract-audio --audio-format mp3 -o '%(title)s.\\%(ext)s'"
alias ytd="youtube-dl -i --audio-quality 0 --extract-audio --audio-format mp3 -o '%(playlist_index)s - %(title)s.\\%(ext)s'"

# alias ytd2="youtube-dl -i --audio-quality 0 --extract-audio --audio-format mp3 -o '%(title)s.mp3'"

alias ytd2="youtube-dl -i --audio-quality 0 --extract-audio --audio-format mp3 -o '%(title)s.%(ext)s'"


# alias ytd='asdf \\%'
# alias ll='ls -l'

alias ok="ping google.com"

alias sparql="/home/johannes/technical/apache-jena-3.12.0/bin/sparql"

alias sus="systemctl suspend"

# youtube-dl -i --audio-quality 0 --extract-audio --audio-format mp3 -o '%(title)s.%(ext)s' https://www.youtube.com/playlist?list=PLcYIWS2wAj7UQ8dfo9S4FblP42S4a_sKp

alias music='tmux new-session "tmux source-file ~/.ncmpcpp/tmux_session"' # Tmux session with ncmpcpp and cover art

alias ecw='emacsclient --nw'
alias ec='emacsclient -c'
# alias sude='emacsclient --nw'

alias python3='python3.7'

alias ut='urxvt &'

alias python=python3.7

alias alc='/usr/local/bin/tabbed alacritty --embed'


[ -f ~/.fzf.bash ] && source ~/.fzf.bash

function eyd3(){
    eyeD3 --add-image "$1:FRONT_COVER" *.mp3
}



# prepare select * from tables where name = ?; execute prepared statement using: EXEC 15(...)

# HISTFILESIZE=$HISTSIZE
# HISTCONTROL=ignorespace:ignoredups

# copied from https://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows

HISTSIZE=999999
HISTFILESIZE=999999


_bash_history_sync() {
    builtin history -a         #1
    HISTFILESIZE=$HISTSIZE     #2
    builtin history -c         #3
    builtin history -r         #4
}

history() {                  #5
    _bash_history_sync
    builtin history "$@"
}

PROMPT_COMMAND=_bash_history_sync


# export PROMPT_COMMAND='history -a;history -r'
# shopt -s histappend


# export NEO4J_HOME="/home/johannes/neo4j/"
# do i even need that? 

export EDITOR="/usr/bin/emacsclient -c"

export BROWSER=/usr/bin/brave-browser

alias python3='/usr/bin/python3.8' 

# first see if dpkg-installed i386 version works
# export LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libgtk3-nocsd.so.0

# link to manually installed 32 bit version
# export LD_PRELOAD=/usr/lib/i386-linux-gnu/libgtk3-nocsd.so.0


# https://portingteam.com/topic/8143-running-game-on-wineskin-but-graphics-are-totally-messed-up/
# setting direct draw renderer to GDI solves problem of wined3d_get_user_override_gpu_description Invalid GPU override

export GTK_IM_MODULE=ibus
export XMODIFIERS=@im=ibus
export QT_IM_MODULE=ibus
